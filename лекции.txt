1 лекция

от 2 до 5 человек(первый 2 3)
первый проект калькулятор
сосчитать выражение
на 5 надо комплексную арефметику на защите будет вопросы, в группе должен быть человек отвечающий за тесты
могут быть вопросы по коду на защиту 5 минут(3 минуты на калькулятор)
дедлайн 2 февраля пишем на плюсах
моделирование экосистемы, сетевая игра - другие проекты
« поток вывода
std пространство имён
\n быстрее endl
int& - ссылка/указатель (2 имя переменной) должна быть инициализированан сразу, операции выполняются над переменно на которую указывает ссылка
int* arr = new int[size] - создание массива delete[] arr -удаление массива.
класс это абстрактный тип данных. данные класса - поля
инкопсуляция - скрытие данных от пользователя

2 лекция 

класс это тип данных
объект это экземпляр, програмисты это аутисты!!!
список инициализации в {}
int это класс(как и другие типы данных)
есть поля класса которые можно инициализировать только в полях это const, ссылки, поля класса без типа по умолчанию
в c++ нет типа по умолчанию
:: - операция разрешения области видимости бывает в бинарном и унарном слева имя класса или вложенае пространоство имён самый высокий приоритет
Исключения - дальнейшая работа программы не возможна
разработчик класса знает где ошибка, но не знает что с ней делать, а пользователь разработчик исп. класс не знает когда ошибка но знает что делать.
каждая функция класса в качестве первого не явного параметра аргумента имеет специальный указатель который хранит адрес объекта (this)

3 лекция

конструкторы нужны для того, чтобы мусор не лажел в полях и объки был в адекватном состоянии.
конструктор копирования работает, когда мы передаём, возвращаем объект из функции. 
друзья:
классы имеют особый доступ друг к другу. "Друзья" класса имеют доступ к закрытой части класса. 
Друзья - это либо другие классы, либо отдельные функции других клаассов, либо отдельные функции (даже main).
"Дружественность" требует явного объвления, отношение "дружественности" не симметричны. 
Отношения дружественности не транзитивны. 
Отношение дружественности не наследуется.
можно "дружить" с тем, кого нет.
отношение "дружественности" нарушают принцип инкапсуляции (сокрытие данных).

статические члены класса:
всегда существуют.
экземпляры класса могут пользоваться ими, при этом число статических членов не меняется.
статические поля создаются отдельно от объектов.
статическме поля нужны, если хотите знать сколько экземпляров класса создано (база данных); обмен данными;
можно вызвать через имя класа или объекта.
статические функции класса нужны для работы со статическимим полями класса.
статические поля харанятся отдельно от объектов.
статические функции чаще всего хранятся в разделе public.
из статических функций можно обращаться только к статическим полям класса.
статические функции не могут быть констатными.
статические функции не могут быть виртуальными.
статические функциях нет указателя this.
для вызова статической функции в момент, когда не создано ни одного объекта класса, можно написать имя класса, поставить два двоеточия и указать имя функции.

4 лекция.
перегрузка операторов:



